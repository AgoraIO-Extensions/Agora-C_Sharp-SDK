#region Generated by `terra/node/src/rtc/ut/renderers.ts`. DO NOT MODIFY BY HAND.
#endregion

using NUnit.Framework;
using Agora.Rtc;
using System;
using view_t = System.UInt64;
namespace Agora.Rtc.Ut
{
    public partial class UnitTest_IVideoDeviceManager
    {
        [Test]
        public void Test_SetDevice_4ad5f6e()
        {
            var deviceIdUTF8 = ParamsHelper.CreateParam<string>();

            var nRet = @interface.SetDevice(deviceIdUTF8);
            Assert.AreEqual(0, nRet);
        }


        [Test]
        public void Test_GetDevice_73b9872()
        {
            var deviceIdUTF8 = ParamsHelper.CreateParam<string>();

            var nRet = @interface.GetDevice(ref deviceIdUTF8);
            Assert.AreEqual(0, nRet);
        }


        [Test]
        public void Test_NumberOfCapabilities_3a2037f()
        {
            var deviceIdUTF8 = ParamsHelper.CreateParam<string>();

            var nRet = @interface.NumberOfCapabilities(deviceIdUTF8);
            Assert.AreEqual(0, nRet);
        }


        [Test]
        public void Test_GetCapability_ddeefdd()
        {
            var deviceIdUTF8 = ParamsHelper.CreateParam<string>();

            var deviceCapabilityNumber = ParamsHelper.CreateParam<uint>();

            var capability = ParamsHelper.CreateParam<VideoFormat>();

            var nRet = @interface.GetCapability(deviceIdUTF8, deviceCapabilityNumber, ref capability);
            Assert.AreEqual(0, nRet);
        }


        [Test]
        public void Test_StartDeviceTest_a55f55f()
        {
            var hwnd = ParamsHelper.CreateParam<IntPtr>();

            var nRet = @interface.StartDeviceTest(hwnd);
            Assert.AreEqual(0, nRet);
        }


        [Test]
        public void Test_StopDeviceTest()
        {
            var nRet = @interface.StopDeviceTest();
            Assert.AreEqual(0, nRet);
        }


    }
}