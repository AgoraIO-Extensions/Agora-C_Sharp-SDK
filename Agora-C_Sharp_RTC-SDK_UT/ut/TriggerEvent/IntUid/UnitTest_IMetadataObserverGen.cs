#region Generated by `terra/node/src/rtc/ut/renderers.ts`. DO NOT MODIFY BY HAND.
#endregion

using System;
using NUnit.Framework;
using uid_t = System.UInt32;
using System.Collections.Generic;
namespace Agora.Rtc.Ut.Event
{
    public partial class UnitTest_IMetadataObserver
    {
#if !(UNITY_EDITOR_WIN || UNITY_EDITOR_OSX || UNITY_STANDALONE_WIN || UNITY_STANDALONE_OSX || UNITY_IOS || UNITY_ANDROID)
        [Test]
        public void Test_IMetadataObserver_GetMaxMetadataSize()
        {
            ApiParam.@event = AgoraApiType.IMETADATAOBSERVER_GETMAXMETADATASIZE;

            jsonObj.Clear();

            var jsonString = LitJson.JsonMapper.ToJson(jsonObj);
            ApiParam.data = jsonString;
            ApiParam.data_size = (uint)jsonString.Length;

            int ret = DLLHelper.TriggerEventWithFakeRtcEngine(FakeRtcEnginePtr, ref ApiParam);
            Assert.AreEqual(0, ret);
            Assert.AreEqual(true, callback.GetMaxMetadataSizePassed());
        }
#endif

#if !(UNITY_EDITOR_WIN || UNITY_EDITOR_OSX || UNITY_STANDALONE_WIN || UNITY_STANDALONE_OSX || UNITY_IOS || UNITY_ANDROID)
        [Test]
        public void Test_IMetadataObserver_OnReadyToSendMetadata_cbf4b59()
        {
            ApiParam.@event = AgoraApiType.IMETADATAOBSERVER_ONREADYTOSENDMETADATA_cbf4b59;

            jsonObj.Clear();

            Metadata metadata = ParamsHelper.CreateParam<Metadata>();
            jsonObj.Add("metadata", metadata);

            VIDEO_SOURCE_TYPE source_type = ParamsHelper.CreateParam<VIDEO_SOURCE_TYPE>();
            jsonObj.Add("source_type", source_type);

            var jsonString = LitJson.JsonMapper.ToJson(jsonObj);
            ApiParam.data = jsonString;
            ApiParam.data_size = (uint)jsonString.Length;

            int ret = DLLHelper.TriggerEventWithFakeRtcEngine(FakeRtcEnginePtr, ref ApiParam);
            Assert.AreEqual(0, ret);
            Assert.AreEqual(true, callback.OnReadyToSendMetadataPassed(ref metadata, source_type));
        }
#endif

        [Test]
        public void Test_IMetadataObserver_OnMetadataReceived_cb7661d()
        {
            ApiParam.@event = AgoraApiType.IMETADATAOBSERVER_ONMETADATARECEIVED_cb7661d;

            jsonObj.Clear();

            Metadata metadata = ParamsHelper.CreateParam<Metadata>();
            jsonObj.Add("metadata", metadata);

            var jsonString = LitJson.JsonMapper.ToJson(jsonObj);
            ApiParam.data = jsonString;
            ApiParam.data_size = (uint)jsonString.Length;

            int ret = DLLHelper.TriggerEventWithFakeRtcEngine(FakeRtcEnginePtr, ref ApiParam);
            Assert.AreEqual(0, ret);
            Assert.AreEqual(true, callback.OnMetadataReceivedPassed(metadata));
        }

    }
}