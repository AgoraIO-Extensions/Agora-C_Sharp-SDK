#region Generated by `terra/node/src/rtc/ut/renderers.ts`. DO NOT MODIFY BY HAND.
#endregion

using System;
using NUnit.Framework;
using uid_t = System.UInt32;
using System.Collections.Generic;
namespace Agora.Rtc.Ut.Event
{
    public partial class UnitTest_IAudioEncodedFrameObserver
    {
        [Test]
        public void Test_IAudioEncodedFrameObserver_OnRecordAudioEncodedFrame_d930ddc()
        {
            ApiParam.@event = AgoraApiType.IAUDIOENCODEDFRAMEOBSERVER_ONRECORDAUDIOENCODEDFRAME_d930ddc;

            jsonObj.Clear();

            IntPtr frameBuffer = ParamsHelper.CreateParam<IntPtr>();
            jsonObj.Add("frameBuffer", frameBuffer);

            int length = ParamsHelper.CreateParam<int>();
            jsonObj.Add("length", length);

            EncodedAudioFrameInfo audioEncodedFrameInfo = ParamsHelper.CreateParam<EncodedAudioFrameInfo>();
            jsonObj.Add("audioEncodedFrameInfo", audioEncodedFrameInfo);

            var jsonString = LitJson.JsonMapper.ToJson(jsonObj);
            ApiParam.data = jsonString;
            ApiParam.data_size = (uint)jsonString.Length;

            int ret = DLLHelper.TriggerEventWithFakeRtcEngine(FakeRtcEnginePtr, ref ApiParam);
            Assert.AreEqual(0, ret);
            Assert.AreEqual(true, callback.OnRecordAudioEncodedFramePassed(frameBuffer, length, audioEncodedFrameInfo));
        }

        [Test]
        public void Test_IAudioEncodedFrameObserver_OnPlaybackAudioEncodedFrame_d930ddc()
        {
            ApiParam.@event = AgoraApiType.IAUDIOENCODEDFRAMEOBSERVER_ONPLAYBACKAUDIOENCODEDFRAME_d930ddc;

            jsonObj.Clear();

            IntPtr frameBuffer = ParamsHelper.CreateParam<IntPtr>();
            jsonObj.Add("frameBuffer", frameBuffer);

            int length = ParamsHelper.CreateParam<int>();
            jsonObj.Add("length", length);

            EncodedAudioFrameInfo audioEncodedFrameInfo = ParamsHelper.CreateParam<EncodedAudioFrameInfo>();
            jsonObj.Add("audioEncodedFrameInfo", audioEncodedFrameInfo);

            var jsonString = LitJson.JsonMapper.ToJson(jsonObj);
            ApiParam.data = jsonString;
            ApiParam.data_size = (uint)jsonString.Length;

            int ret = DLLHelper.TriggerEventWithFakeRtcEngine(FakeRtcEnginePtr, ref ApiParam);
            Assert.AreEqual(0, ret);
            Assert.AreEqual(true, callback.OnPlaybackAudioEncodedFramePassed(frameBuffer, length, audioEncodedFrameInfo));
        }

        [Test]
        public void Test_IAudioEncodedFrameObserver_OnMixedAudioEncodedFrame_d930ddc()
        {
            ApiParam.@event = AgoraApiType.IAUDIOENCODEDFRAMEOBSERVER_ONMIXEDAUDIOENCODEDFRAME_d930ddc;

            jsonObj.Clear();

            IntPtr frameBuffer = ParamsHelper.CreateParam<IntPtr>();
            jsonObj.Add("frameBuffer", frameBuffer);

            int length = ParamsHelper.CreateParam<int>();
            jsonObj.Add("length", length);

            EncodedAudioFrameInfo audioEncodedFrameInfo = ParamsHelper.CreateParam<EncodedAudioFrameInfo>();
            jsonObj.Add("audioEncodedFrameInfo", audioEncodedFrameInfo);

            var jsonString = LitJson.JsonMapper.ToJson(jsonObj);
            ApiParam.data = jsonString;
            ApiParam.data_size = (uint)jsonString.Length;

            int ret = DLLHelper.TriggerEventWithFakeRtcEngine(FakeRtcEnginePtr, ref ApiParam);
            Assert.AreEqual(0, ret);
            Assert.AreEqual(true, callback.OnMixedAudioEncodedFramePassed(frameBuffer, length, audioEncodedFrameInfo));
        }

    }
}