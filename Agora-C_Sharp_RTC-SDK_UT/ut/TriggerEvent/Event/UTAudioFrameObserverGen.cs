#region Generated by `terra/node/src/rtc/ut/renderers.ts`. DO NOT MODIFY BY HAND.
#endregion

using System;
using Agora.Rtc;
namespace Agora.Rtc.Ut
{
    public partial class UTAudioFrameObserver : IAudioFrameObserver
    {
        public bool OnPlaybackAudioFrameBeforeMixing_85ec0fc_be_trigger = false;
        public string OnPlaybackAudioFrameBeforeMixing_85ec0fc_channelId;
        public uint OnPlaybackAudioFrameBeforeMixing_85ec0fc_uid;
        public AudioFrame OnPlaybackAudioFrameBeforeMixing_85ec0fc_audioFrame;

        public override bool OnPlaybackAudioFrameBeforeMixing(string channelId, uint uid, AudioFrame audioFrame)
        {
            OnPlaybackAudioFrameBeforeMixing_85ec0fc_be_trigger = true;
            OnPlaybackAudioFrameBeforeMixing_85ec0fc_channelId = channelId;
            OnPlaybackAudioFrameBeforeMixing_85ec0fc_uid = uid;
            OnPlaybackAudioFrameBeforeMixing_85ec0fc_audioFrame = audioFrame;
            return true;
        }

        public bool OnPlaybackAudioFrameBeforeMixingPassed(string channelId, uint uid, AudioFrame audioFrame)
        {
            if (OnPlaybackAudioFrameBeforeMixing_85ec0fc_be_trigger == false)
                return false;

            if (ParamsHelper.Compare<string>(OnPlaybackAudioFrameBeforeMixing_85ec0fc_channelId, channelId) == false)
                return false;
            if (ParamsHelper.Compare<uint>(OnPlaybackAudioFrameBeforeMixing_85ec0fc_uid, uid) == false)
                return false;
            if (ParamsHelper.Compare<AudioFrame>(OnPlaybackAudioFrameBeforeMixing_85ec0fc_audioFrame, audioFrame) == false)
                return false;

            return true;
        }

        /////////////////////////////////

        public bool OnRecordAudioFrame_4c8de15_be_trigger = false;
        public string OnRecordAudioFrame_4c8de15_channelId;
        public AudioFrame OnRecordAudioFrame_4c8de15_audioFrame;

        public override bool OnRecordAudioFrame(string channelId, AudioFrame audioFrame)
        {
            OnRecordAudioFrame_4c8de15_be_trigger = true;
            OnRecordAudioFrame_4c8de15_channelId = channelId;
            OnRecordAudioFrame_4c8de15_audioFrame = audioFrame;
            return true;
        }

        public bool OnRecordAudioFramePassed(string channelId, AudioFrame audioFrame)
        {
            if (OnRecordAudioFrame_4c8de15_be_trigger == false)
                return false;

            if (ParamsHelper.Compare<string>(OnRecordAudioFrame_4c8de15_channelId, channelId) == false)
                return false;
            if (ParamsHelper.Compare<AudioFrame>(OnRecordAudioFrame_4c8de15_audioFrame, audioFrame) == false)
                return false;

            return true;
        }

        /////////////////////////////////

        public bool OnPlaybackAudioFrame_4c8de15_be_trigger = false;
        public string OnPlaybackAudioFrame_4c8de15_channelId;
        public AudioFrame OnPlaybackAudioFrame_4c8de15_audioFrame;

        public override bool OnPlaybackAudioFrame(string channelId, AudioFrame audioFrame)
        {
            OnPlaybackAudioFrame_4c8de15_be_trigger = true;
            OnPlaybackAudioFrame_4c8de15_channelId = channelId;
            OnPlaybackAudioFrame_4c8de15_audioFrame = audioFrame;
            return true;
        }

        public bool OnPlaybackAudioFramePassed(string channelId, AudioFrame audioFrame)
        {
            if (OnPlaybackAudioFrame_4c8de15_be_trigger == false)
                return false;

            if (ParamsHelper.Compare<string>(OnPlaybackAudioFrame_4c8de15_channelId, channelId) == false)
                return false;
            if (ParamsHelper.Compare<AudioFrame>(OnPlaybackAudioFrame_4c8de15_audioFrame, audioFrame) == false)
                return false;

            return true;
        }

        /////////////////////////////////

        public bool OnMixedAudioFrame_4c8de15_be_trigger = false;
        public string OnMixedAudioFrame_4c8de15_channelId;
        public AudioFrame OnMixedAudioFrame_4c8de15_audioFrame;

        public override bool OnMixedAudioFrame(string channelId, AudioFrame audioFrame)
        {
            OnMixedAudioFrame_4c8de15_be_trigger = true;
            OnMixedAudioFrame_4c8de15_channelId = channelId;
            OnMixedAudioFrame_4c8de15_audioFrame = audioFrame;
            return true;
        }

        public bool OnMixedAudioFramePassed(string channelId, AudioFrame audioFrame)
        {
            if (OnMixedAudioFrame_4c8de15_be_trigger == false)
                return false;

            if (ParamsHelper.Compare<string>(OnMixedAudioFrame_4c8de15_channelId, channelId) == false)
                return false;
            if (ParamsHelper.Compare<AudioFrame>(OnMixedAudioFrame_4c8de15_audioFrame, audioFrame) == false)
                return false;

            return true;
        }

        /////////////////////////////////

        public bool OnEarMonitoringAudioFrame_5405a47_be_trigger = false;
        public AudioFrame OnEarMonitoringAudioFrame_5405a47_audioFrame;

        public override bool OnEarMonitoringAudioFrame(AudioFrame audioFrame)
        {
            OnEarMonitoringAudioFrame_5405a47_be_trigger = true;
            OnEarMonitoringAudioFrame_5405a47_audioFrame = audioFrame;
            return true;
        }

        public bool OnEarMonitoringAudioFramePassed(AudioFrame audioFrame)
        {
            if (OnEarMonitoringAudioFrame_5405a47_be_trigger == false)
                return false;

            if (ParamsHelper.Compare<AudioFrame>(OnEarMonitoringAudioFrame_5405a47_audioFrame, audioFrame) == false)
                return false;

            return true;
        }

        /////////////////////////////////

        public bool OnPlaybackAudioFrameBeforeMixing_9215cc7_be_trigger = false;
        public string OnPlaybackAudioFrameBeforeMixing_9215cc7_channelId;
        public string OnPlaybackAudioFrameBeforeMixing_9215cc7_userId;
        public AudioFrame OnPlaybackAudioFrameBeforeMixing_9215cc7_audioFrame;

        public override bool OnPlaybackAudioFrameBeforeMixing(string channelId, string userId, AudioFrame audioFrame)
        {
            OnPlaybackAudioFrameBeforeMixing_9215cc7_be_trigger = true;
            OnPlaybackAudioFrameBeforeMixing_9215cc7_channelId = channelId;
            OnPlaybackAudioFrameBeforeMixing_9215cc7_userId = userId;
            OnPlaybackAudioFrameBeforeMixing_9215cc7_audioFrame = audioFrame;
            return true;
        }

        public bool OnPlaybackAudioFrameBeforeMixingPassed(string channelId, string userId, AudioFrame audioFrame)
        {
            if (OnPlaybackAudioFrameBeforeMixing_9215cc7_be_trigger == false)
                return false;

            if (ParamsHelper.Compare<string>(OnPlaybackAudioFrameBeforeMixing_9215cc7_channelId, channelId) == false)
                return false;
            if (ParamsHelper.Compare<string>(OnPlaybackAudioFrameBeforeMixing_9215cc7_userId, userId) == false)
                return false;
            if (ParamsHelper.Compare<AudioFrame>(OnPlaybackAudioFrameBeforeMixing_9215cc7_audioFrame, audioFrame) == false)
                return false;

            return true;
        }

        /////////////////////////////////

    }
}