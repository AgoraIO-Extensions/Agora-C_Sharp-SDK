#region Generated by `terra/node/src/rtc/impl/renderers.ts`. DO NOT MODIFY BY HAND.
#endregion

#define AGORA_RTC
#define AGORA_RTM
using System;
using view_t = System.UInt64;

namespace Agora.Rtc
{
    public partial class MusicContentCenterImpl
    {

        public int Initialize(MusicContentCenterConfiguration configuration)
        {
            _param.Clear();
            _param.Add("configuration", configuration);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_INITIALIZE_df70304,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");


            return result;
        }

        public int RenewToken(string token)
        {
            _param.Clear();
            _param.Add("token", token);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_RENEWTOKEN_3a2037f,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");


            return result;
        }

        public int GetMusicCharts(ref string requestId)
        {
            _param.Clear();

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_GETMUSICCHARTS_66d4ecd,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");

            if (nRet == 0)
            {
                requestId = (string)AgoraJson.GetData<string>(_apiParam.Result, "requestId");
            }

            return result;
        }

        public int GetMusicCollectionByMusicChartId(ref string requestId, int musicChartId, int page, int pageSize, string jsonOption = "")
        {
            _param.Clear();
            _param.Add("musicChartId", musicChartId);
            _param.Add("page", page);
            _param.Add("pageSize", pageSize);
            _param.Add("jsonOption", jsonOption);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_GETMUSICCOLLECTIONBYMUSICCHARTID_8cd0b4d,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");

            if (nRet == 0)
            {
                requestId = (string)AgoraJson.GetData<string>(_apiParam.Result, "requestId");
            }

            return result;
        }

        public int SearchMusic(ref string requestId, string keyWord, int page, int pageSize, string jsonOption = "")
        {
            _param.Clear();
            _param.Add("keyWord", keyWord);
            _param.Add("page", page);
            _param.Add("pageSize", pageSize);
            _param.Add("jsonOption", jsonOption);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_SEARCHMUSIC_3f8cf09,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");

            if (nRet == 0)
            {
                requestId = (string)AgoraJson.GetData<string>(_apiParam.Result, "requestId");
            }

            return result;
        }

        public int Preload(long songCode, string jsonOption)
        {
            _param.Clear();
            _param.Add("songCode", songCode);
            _param.Add("jsonOption", jsonOption);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_PRELOAD_bd5a5a3,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");


            return result;
        }

        public int Preload(ref string requestId, long songCode)
        {
            _param.Clear();
            _param.Add("songCode", songCode);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_PRELOAD_d3baeab,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");

            if (nRet == 0)
            {
                requestId = (string)AgoraJson.GetData<string>(_apiParam.Result, "requestId");
            }

            return result;
        }

        public int RemoveCache(long songCode)
        {
            _param.Clear();
            _param.Add("songCode", songCode);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_REMOVECACHE_f631116,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");


            return result;
        }

        public int GetCaches(ref MusicCacheInfo[] cacheInfo, ref int cacheInfoSize)
        {
            _param.Clear();

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_GETCACHES_c4f9978,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");

            if (nRet == 0)
            {
                cacheInfo = (MusicCacheInfo[])AgoraJson.JsonToStructArray<MusicCacheInfo>(_apiParam.Result, "cacheInfo");
                cacheInfoSize = (int)AgoraJson.GetData<int>(_apiParam.Result, "cacheInfoSize");
            }

            return result;
        }

        public int IsPreloaded(long songCode)
        {
            _param.Clear();
            _param.Add("songCode", songCode);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_ISPRELOADED_f631116,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");


            return result;
        }

        public int GetLyric(ref string requestId, long songCode, int lyricType = 0)
        {
            _param.Clear();
            _param.Add("songCode", songCode);
            _param.Add("lyricType", lyricType);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_GETLYRIC_5ab5efd,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");

            if (nRet == 0)
            {
                requestId = (string)AgoraJson.GetData<string>(_apiParam.Result, "requestId");
            }

            return result;
        }

        public int GetSongSimpleInfo(ref string requestId, long songCode)
        {
            _param.Clear();
            _param.Add("songCode", songCode);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_GETSONGSIMPLEINFO_d3baeab,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");

            if (nRet == 0)
            {
                requestId = (string)AgoraJson.GetData<string>(_apiParam.Result, "requestId");
            }

            return result;
        }

        public int GetInternalSongCode(long songCode, string jsonOption, ref long internalSongCode)
        {
            _param.Clear();
            _param.Add("songCode", songCode);
            _param.Add("jsonOption", jsonOption);

            var json = AgoraJson.ToJson(_param);
            var nRet = AgoraRtcNative.CallIrisApiWithArgs(_irisApiEngine, AgoraApiType.IMUSICCONTENTCENTER_GETINTERNALSONGCODE_3a3d1e7,
                json, (UInt32)json.Length,
                IntPtr.Zero, 0,
                ref _apiParam);

            var result = nRet != 0 ? nRet : (int)AgoraJson.GetData<int>(_apiParam.Result, "result");

            if (nRet == 0)
            {
                internalSongCode = (long)AgoraJson.GetData<long>(_apiParam.Result, "internalSongCode");
            }

            return result;
        }

    }
}