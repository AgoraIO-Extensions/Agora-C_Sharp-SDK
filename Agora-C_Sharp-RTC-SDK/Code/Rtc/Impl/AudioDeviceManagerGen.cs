#region Generated by `terra/node/src/rtc/middle/renderers.ts`. DO NOT MODIFY BY HAND.
#endregion

#define AGORA_RTC
#define AGORA_RTM
using System;
using view_t = System.UInt64;

namespace Agora.Rtc
{
    public partial class AudioDeviceManager : IAudioDeviceManager
    {

        public override int SetPlaybackDevice(string deviceId)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.SetPlaybackDevice(deviceId);
        }

        public override int GetPlaybackDevice(ref string deviceId)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetPlaybackDevice(ref deviceId);
        }

        public override int GetPlaybackDeviceInfo(ref string deviceId, ref string deviceName)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetPlaybackDeviceInfo(ref deviceId, ref deviceName);
        }

        public override int GetPlaybackDeviceInfo(ref string deviceId, ref string deviceName, ref string deviceTypeName)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetPlaybackDeviceInfo(ref deviceId, ref deviceName, ref deviceTypeName);
        }

        public override int SetPlaybackDeviceVolume(int volume)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.SetPlaybackDeviceVolume(volume);
        }

        public override int GetPlaybackDeviceVolume(ref int volume)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetPlaybackDeviceVolume(ref volume);
        }

        public override int SetRecordingDevice(string deviceId)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.SetRecordingDevice(deviceId);
        }

        public override int GetRecordingDevice(ref string deviceId)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetRecordingDevice(ref deviceId);
        }

        public override int GetRecordingDeviceInfo(ref string deviceId, ref string deviceName)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetRecordingDeviceInfo(ref deviceId, ref deviceName);
        }

        public override int GetRecordingDeviceInfo(ref string deviceId, ref string deviceName, ref string deviceTypeName)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetRecordingDeviceInfo(ref deviceId, ref deviceName, ref deviceTypeName);
        }

        public override int SetRecordingDeviceVolume(int volume)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.SetRecordingDeviceVolume(volume);
        }

        public override int GetRecordingDeviceVolume(ref int volume)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetRecordingDeviceVolume(ref volume);
        }

        public override int SetLoopbackDevice(string deviceId)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.SetLoopbackDevice(deviceId);
        }

        public override int GetLoopbackDevice(ref string deviceId)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetLoopbackDevice(ref deviceId);
        }

        public override int SetPlaybackDeviceMute(bool mute)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.SetPlaybackDeviceMute(mute);
        }

        public override int GetPlaybackDeviceMute(ref bool mute)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetPlaybackDeviceMute(ref mute);
        }

        public override int SetRecordingDeviceMute(bool mute)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.SetRecordingDeviceMute(mute);
        }

        public override int GetRecordingDeviceMute(ref bool mute)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.GetRecordingDeviceMute(ref mute);
        }

        public override int StartPlaybackDeviceTest(string testAudioFilePath)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.StartPlaybackDeviceTest(testAudioFilePath);
        }

        public override int StopPlaybackDeviceTest()
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.StopPlaybackDeviceTest();
        }

        public override int StartRecordingDeviceTest(int indicationInterval)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.StartRecordingDeviceTest(indicationInterval);
        }

        public override int StopRecordingDeviceTest()
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.StopRecordingDeviceTest();
        }

        public override int StartAudioDeviceLoopbackTest(int indicationInterval)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.StartAudioDeviceLoopbackTest(indicationInterval);
        }

        public override int StopAudioDeviceLoopbackTest()
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.StopAudioDeviceLoopbackTest();
        }

        public override int FollowSystemPlaybackDevice(bool enable)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.FollowSystemPlaybackDevice(enable);
        }

        public override int FollowSystemRecordingDevice(bool enable)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.FollowSystemRecordingDevice(enable);
        }

        public override int FollowSystemLoopbackDevice(bool enable)
        {
            if (_impl == null)
            {
                return ErrorCode;
            }
            return _impl.FollowSystemLoopbackDevice(enable);
        }

    }
}